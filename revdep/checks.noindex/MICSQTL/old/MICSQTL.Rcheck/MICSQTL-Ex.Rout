
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "MICSQTL"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('MICSQTL')
Loading required package: SummarizedExperiment
Warning: package ‘SummarizedExperiment’ was built under R version 4.3.2
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append,
    as.data.frame, basename, cbind, colnames, dirname, do.call,
    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,
    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,
    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,
    tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors
Warning: package ‘S4Vectors’ was built under R version 4.3.2

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:utils’:

    findMatches

The following objects are masked from ‘package:base’:

    I, expand.grid, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb
Warning: package ‘GenomeInfoDb’ was built under R version 4.3.2
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("ajive_decomp")
> ### * ajive_decomp
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ajive_decomp
> ### Title: Integrative analysis for modes of joint variation
> ### Aliases: ajive_decomp
> 
> ### ** Examples
> 
> data(se)
> metadata(se)$gene_data <- metadata(se)$gene_data[seq_len(100),] #reduce time
> se <- ajive_decomp(se, use_marker = TRUE)
> 
> 
> 
> 
> cleanEx()
> nameEx("csQTL")
> ### * csQTL
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: csQTL
> ### Title: Cell-type-specific differential expression (csQTL)
> ### Aliases: csQTL
> 
> ### ** Examples
> 
> data(se)
> se <- deconv(se, source = "protein", method = "nnls", use_refactor = NULL)
> target_protein <- c("ABCA1")
> se <- feature_filter(se,
+     target_protein = target_protein,
+     filter_method = c("allele", "distance"), filter_allele = 0.15,
+     filter_geno = 0.05, ref_position = "TSS"
+ )
Filter SNP based on distance for protein ABCA1


> se <- csQTL(se)
csQTL test for protein ABCA1

> 
> 
> 
> 
> cleanEx()
> nameEx("deconv")
> ### * deconv
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: deconv
> ### Title: Estimation of cellular composition in high-throughput data from
> ###   heterogeneous tissues
> ### Aliases: deconv
> 
> ### ** Examples
> 
> data(se)
> se <- deconv(se, source = "protein", method = "nnls", use_refactor = NULL)
> 
> 
> 
> 
> cleanEx()
> nameEx("feature_filter")
> ### * feature_filter
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: feature_filter
> ### Title: Feature filtering
> ### Aliases: feature_filter
> 
> ### ** Examples
> 
> data(se)
> target_protein <- rowData(se)[rowData(se)$Chr == 9, ][seq_len(3), "Symbol"]
> se <- feature_filter(se,
+     target_protein = target_protein,
+     filter_method = c("allele", "distance"),
+     filter_allele = 0.15, filter_geno = 0.05, ref_position = "TSS"
+ )
Filter SNP based on distance for protein ABCA1


Filter SNP based on distance for protein ABCA2


Filter SNP based on distance for protein AGTPBP1


> 
> 
> 
> 
> cleanEx()
> nameEx("se")
> ### * se
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: se
> ### Title: Example data
> ### Aliases: se
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(se)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  69.123 1.275 71.037 0.388 0.289 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
