
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "coveffectsplot"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('coveffectsplot')
Loading required package: data.table
Thank you for using coveffectsplot!
if you find it useful, please cite as:
JF Marier, N Teuscher and MS Mouksassi. Evaluation of covariate effects using forest plots and introduction to the coveffectsplot R package. CPT Pharmacometrics Syst Pharmacol. 2022;11:1283-1293. doi:10.1002/psp4.12829
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("expand_modelframe")
> ### * expand_modelframe
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: expand_modelframe
> ### Title: Expand covariate values choices and reference values varying one
> ###   at a time
> ### Aliases: expand_modelframe
> 
> ### ** Examples
> 
> reference.values <- data.frame(WT = 85, ALB = 45, SEX = 0)   
> covcomb <- expand_modelframe(
+   WT  = c(56, 72, 98, 128), # P05, P25, P75, P95 # ref is P50
+ ALB = c(40, 50),          # P05, P95 # ref is P50
+   SEX = c(1),               # Reference is for SEX=0 (female)
+   rv = reference.values)
> covcomb
   WT ALB SEX covname
1  56  45   0      WT
2  72  45   0      WT
3  98  45   0      WT
4 128  45   0      WT
5  85  40   0     ALB
6  85  50   0     ALB
7  85  45   1     SEX
> 
> 
> 
> cleanEx()
> nameEx("forest_plot")
> ### * forest_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: forest_plot
> ### Title: Forest plot
> ### Aliases: forest_plot
> 
> ### ** Examples
> 
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(ggplot2)
> 
> # Example 1
> 
> plotdata <- get_sample_data("forest-plot-table.csv")
> plotdata <- plotdata %>%
+   mutate(midlabel = format(round(mid,2), nsmall = 2),
+          lowerlabel = format(round(lower,2), nsmall = 2),
+          upperlabel = format(round(upper,2), nsmall = 2),
+          LABEL = paste0(midlabel, " [", lowerlabel, "-", upperlabel, "]"))
> param <- "BZD AUC"
> plotdata <-  filter(plotdata,paramname==param)
> plotdata$covname <- reorder(plotdata$covname,plotdata$upper,FUN =max)
> plotdata$label <- reorder(plotdata$label,plotdata$scen)
> covs <- c("WEIGHT","AGE")
> plotdata <-  filter(plotdata,covname%in%covs)
> forest_plot(plotdata,
+             ref_legend_text = "Reference (vertical line)",
+             area_legend_text = "Reference (vertical line)",
+             xlabel = paste("Fold Change in", param, "Relative to Reference"),
+             logxscale = TRUE, major_x_ticks =c(0.1,1,1.5),
+             show_ref_area = FALSE,
+             paramname_color =TRUE,
+             interval_col =c("steelblue","red","steelblue","red"),
+             facet_formula = "covname~.",
+             facet_scales = "free_y",
+             facet_space = "free_y",
+             show_table_facet_strip = "none",
+             table_position = "right",
+             plot_title = "",
+             plot_table_ratio = 4)
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
> 
> # Example 2
> 
> plotdata <- get_sample_data("forest-plot-table.csv")
> plotdata <- plotdata %>%
+   mutate(midlabel = format(round(mid,2), nsmall = 2),
+          lowerlabel = format(round(lower,2), nsmall = 2),
+          upperlabel = format(round(upper,2), nsmall = 2),
+          LABEL = paste0(midlabel, " [", lowerlabel, "-", upperlabel, "]"))
> param <- c("BZD AUC","BZD Cmax")
> plotdata <-  filter(plotdata,paramname%in%param)
> plotdata <-  filter(plotdata,covname%in%"WEIGHT")
> plotdata$covname <- reorder(plotdata$covname,plotdata$upper,FUN =max)
> plotdata$label <- reorder(plotdata$label,plotdata$scen)
> forest_plot(plotdata,
+             ref_legend_text = "Reference (vertical line)",
+             area_legend_text = "Reference (vertical line)",
+             xlabel = paste("Fold Change of Parameter", "Relative to Reference"),
+             show_ref_area = FALSE,
+             facet_formula = "covname~paramname",
+             facet_scales = "free_y",
+             facet_space = "free_y",
+             x_facet_text_size = 10,
+             y_facet_text_size = 10,
+             y_label_text_size = 10,
+             y_label_text_width = 15,
+             x_label_text_size = 10,
+             facet_switch = "both",
+             show_table_facet_strip = "both",
+             show_table_yaxis_tick_label = TRUE,
+             table_position = "below",
+             plot_title = "",
+             plot_table_ratio = 1)
> ## Not run: 
> ##D 
> ##D # Example 3a
> ##D 
> ##D plotdata <- get_sample_data("forest-plot-table.csv")
> ##D plotdata <- plotdata %>%
> ##D   mutate(midlabel = format(round(mid,2), nsmall = 2),
> ##D          lowerlabel = format(round(lower,2), nsmall = 2),
> ##D          upperlabel = format(round(upper,2), nsmall = 2),
> ##D          LABEL = paste0(midlabel, " [", lowerlabel, "-", upperlabel, "]"))
> ##D plotdata$covname <- reorder(plotdata$covname,plotdata$upper,FUN =max)
> ##D plotdata$label <- reorder(plotdata$label,plotdata$scen)
> ##D 
> ##D plotdata$compound <- c(rep("1-OH",30),rep("BZD",30))
> ##D plotdata$paramname <- c(rep("AUC",15),rep("CMAX",15),rep("AUC",15),rep("CMAX",15))
> ##D 
> ##D forest_plot(plotdata,
> ##D             ref_area = c(0.8, 1.2),
> ##D            x_facet_text_size = 13,
> ##D            y_facet_text_size = 13,
> ##D             ref_legend_text = "Reference (vertical line)\n+/- 20% limits (colored area)",
> ##D             area_legend_text = "Reference (vertical line)\n+/- 20% limits (colored area)",
> ##D             xlabel = "Fold Change Relative to Parameter",
> ##D             facet_formula = covname~compound,
> ##D             facet_switch = "both",
> ##D             facet_scales = "free",
> ##D             facet_space = "fixed",
> ##D             paramname_shape = TRUE,
> ##D             legend_shape_reverse = TRUE,
> ##D             interval_shape = c("square","triangle"),
> ##D             paramname_color =  FALSE,
> ##D             combine_interval_shape_legend = FALSE,
> ##D             table_position = "right", plot_title = "",
> ##D             ref_area_col = rgb( col2rgb("gray50")[1], col2rgb("gray50")[2],col2rgb("gray50")[3],
> ##D                                 max = 255, alpha = 0.1*255 ) ,
> ##D             interval_col = c("steelblue"),
> ##D             strip_col = "lightblue",
> ##D             plot_table_ratio = 1.5)
> ##D             
> ##D # Example 3b
> ##D         
> ##D plotdata$paramname <- c(rep("1-OH",30),rep("BZD",30))
> ##D plotdata$paramname2 <- c(rep("AUC",15),rep("CMAX",15),rep("AUC",15),rep("CMAX",15))
> ##D forest_plot(plotdata,
> ##D            show_ref_area = TRUE,
> ##D            x_facet_text_size = 13,
> ##D            y_facet_text_size = 13,
> ##D            ref_legend_text = "Reference (vertical line)",
> ##D            area_legend_text = "Reference (vertical line)",
> ##D            xlabel = "Fold Change Relative to Parameter",
> ##D            facet_formula = covname~paramname2,
> ##D            facet_switch = "both",
> ##D            facet_scales = "free",
> ##D            facet_space = "free",
> ##D            legend_order = c("shape","pointinterval","ref"),
> ##D            paramname_shape = TRUE,
> ##D            interval_shape = c("diamond","diamond filled",
> ##D                               "diamond","diamond filled"),
> ##D            paramname_color =  TRUE,
> ##D            combine_interval_shape_legend = TRUE,
> ##D            legend_shape_reverse = TRUE,
> ##D            legend_color_reverse = TRUE,
> ##D            interval_legend_title="Median (points)\n95% CI (horizontal lines)",
> ##D            table_position = "right", plot_title = "",
> ##D            ref_area_col = "gray85" ,
> ##D            interval_col = c("#ee3124", "#fdbb2f"),
> ##D            strip_col = "#475c6b",
> ##D            y_facet_text_col = "white",x_facet_text_col = "white",
> ##D            major_x_labels         = c("1/2", "0.8","1", "1.25", "2"),
> ##D            logxscale = TRUE, major_x_ticks =c(0.5,0.8,1,1.25,2),
> ##D            table_text_size = 5,
> ##D            plot_table_ratio = 1.5,
> ##D            ref_value_by_panel = TRUE,
> ##D            ref_value_by_panel_data = as.data.frame(
> ##D            plotdata %>% 
> ##D            distinct(paramname2,covname) %>% 
> ##D            dplyr::mutate(xintercept=ifelse(paramname2=="CMAX",1,1.2))))
> ##D 
> ##D # Example 3
> ##D 
> ##D plotdata <- get_sample_data("forestplotdatacpidata.csv")
> ##D forest_plot(plotdata,
> ##D             ref_area = c(0.8, 1.2),
> ##D             x_facet_text_size = 12,
> ##D             y_facet_text_size = 12,
> ##D             y_label_text_size = 10,
> ##D             x_label_text_size = 10,
> ##D             table_text_size = 6,
> ##D             plot_table_ratio = 1.5,
> ##D             ref_legend_text = "Reference (vertical line)\n+/- 20% limits (colored area)",
> ##D             area_legend_text = "Reference (vertical line)\n+/- 20% limits (colored area)",
> ##D             xlabel = "Fold Change Relative to RHZE",
> ##D             facet_formula = "covname~paramname",
> ##D             table_position = "below",
> ##D             show_table_facet_strip = "both",
> ##D             show_table_yaxis_tick_label = TRUE)
> ##D 
> ##D # Example 4
> ##D plotdata <- get_sample_data("dataforest.csv")
> ##D plotdata <- plotdata %>%
> ##D   dplyr::mutate(midlabel = format(round(mid,2), nsmall = 2),
> ##D          lowerlabel = format(round(lower,2), nsmall = 2),
> ##D          upperlabel = format(round(upper,2), nsmall = 2),
> ##D          LABEL = paste0(midlabel, " [", lowerlabel, "-", upperlabel, "]"))
> ##D plotdata <- plotdata %>%
> ##D   filter(covname%in%c("Weight"))
> ##D plotdata$label <- as.factor(as.character(plotdata$label))
> ##D plotdata$label <- factor(plotdata$label, c("36.2 kg","66 kg","110 kg"))
> ##D forest_plot(plotdata,
> ##D             ref_area = c(0.8, 1.2),
> ##D             x_facet_text_size = 13,
> ##D             y_facet_text_size = 13,
> ##D             ref_legend_text = "Reference (vertical line)\n+/- 20% limits (colored area)",
> ##D             area_legend_text = "Reference (vertical line)\n+/- 20% limits (colored area)",
> ##D             xlabel = "Fold Change Relative to Parameter",
> ##D             facet_formula = "covname~paramname",
> ##D             facet_switch = "both",
> ##D             facet_scales = "free",
> ##D             facet_space = "fixed",
> ##D             table_position = "below",
> ##D             plot_table_ratio = 1,
> ##D             show_table_facet_strip = "both",
> ##D             show_table_yaxis_tick_label = TRUE)
> ##D 
> ##D # Example 5
> ##D 
> ##D forest_plot(plotdata,
> ##D             ref_area = c(0.8, 1.2),
> ##D             x_facet_text_size = 13,
> ##D             y_facet_text_size = 13,
> ##D             ref_legend_text = "Reference (vertical line)\n+/- 20% limits (colored area)",
> ##D             area_legend_text = "Reference (vertical line)\n+/- 20% limits (colored area)",
> ##D             xlabel = "Fold Change Relative to Parameter",
> ##D             facet_formula = "covname~.",
> ##D             facet_switch = "both",
> ##D             facet_scales = "free",
> ##D             facet_space = "fixed",
> ##D             paramname_shape = TRUE,
> ##D             table_position = "none",
> ##D             ref_area_col = rgb( col2rgb("gray50")[1], col2rgb("gray50")[2],col2rgb("gray50")[3],
> ##D             max = 255, alpha = 0.1*255 ) ,
> ##D             interval_col = "steelblue",
> ##D             strip_col = "lightblue",
> ##D             plot_table_ratio = 1)
> ## End(Not run)
> 
> 
> 
> cleanEx()

detaching ‘package:ggplot2’, ‘package:dplyr’

> nameEx("run_interactiveforestplot")
> ### * run_interactiveforestplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: run_interactiveforestplot
> ### Title: Run the interactiveforestplot application
> ### Aliases: run_interactiveforestplot
> 
> ### ** Examples
> 
> if (interactive()) {
+   run_interactiveforestplot()
+ }
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.112 0.04 1.152 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
