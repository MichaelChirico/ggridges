
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "brms.mmrm"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('brms.mmrm')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("brm_data")
> ### * brm_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_data
> ### Title: Create and preprocess an MMRM dataset.
> ### Aliases: brm_data
> 
> ### ** Examples
> 
> set.seed(0)
> data <- brm_simulate()$data
> colnames(data) <- paste0("col_", colnames(data))
> data
# A tibble: 800 × 4
   col_response col_group col_patient col_time
          <dbl> <chr>     <chr>       <chr>   
 1         1.30 group 1   patient 1   time 1  
 2         2.52 group 1   patient 1   time 2  
 3         2.63 group 1   patient 1   time 3  
 4         1.98 group 1   patient 1   time 4  
 5         1.22 group 1   patient 2   time 1  
 6         2.63 group 1   patient 2   time 2  
 7         2.38 group 1   patient 2   time 3  
 8         2.52 group 1   patient 2   time 4  
 9         1.32 group 1   patient 3   time 1  
10         2.63 group 1   patient 3   time 2  
# ℹ 790 more rows
> brm_data(
+   data = data,
+   outcome = "col_response",
+   role = "response",
+   group = "col_group",
+   time = "col_time",
+   patient = "col_patient"
+ )
# A tibble: 800 × 4
   col_response col_group col_time col_patient
          <dbl> <chr>     <chr>    <chr>      
 1        1.30  group.1   time.1   patient 1  
 2        2.52  group.1   time.2   patient 1  
 3        2.63  group.1   time.3   patient 1  
 4        1.98  group.1   time.4   patient 1  
 5       -0.293 group.1   time.1   patient 10 
 6        0.484 group.1   time.2   patient 10 
 7        0.974 group.1   time.3   patient 10 
 8        0.349 group.1   time.4   patient 10 
 9       -0.274 group.1   time.1   patient 100
10        0.782 group.1   time.2   patient 100
# ℹ 790 more rows
> 
> 
> 
> cleanEx()
> nameEx("brm_formula")
> ### * brm_formula
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_formula
> ### Title: Model formula
> ### Aliases: brm_formula
> 
> ### ** Examples
> 
> set.seed(0)
> data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
> brm_formula(data)
response ~ time + group + group:time + unstr(time = time, gr = patient) 
sigma ~ 0 + time
> brm_formula(data = data, intercept = FALSE, effect_base = FALSE)
response ~ 0 + time + group + group:time + unstr(time = time, gr = patient) 
sigma ~ 0 + time
> brm_formula(
+   data = data,
+   intercept = FALSE,
+   effect_base = FALSE,
+   interaction_group = FALSE
+ )
response ~ 0 + time + group + unstr(time = time, gr = patient) 
sigma ~ 0 + time
> 
> 
> 
> cleanEx()
> nameEx("brm_marginal_data")
> ### * brm_marginal_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_marginal_data
> ### Title: Marginal summaries of the data.
> ### Aliases: brm_marginal_data
> 
> ### ** Examples
> 
> set.seed(0L)
> data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
> brm_marginal_data(data = data)
# A tibble: 56 × 4
   statistic group   time     value
   <chr>     <chr>   <chr>    <dbl>
 1 lower     group.1 time.1 -0.0509
 2 lower     group.1 time.2  1.30  
 3 lower     group.1 time.3  1.22  
 4 lower     group.1 time.4  0.409 
 5 lower     group.2 time.1  1.19  
 6 lower     group.2 time.2  2.54  
 7 lower     group.2 time.3  2.47  
 8 lower     group.2 time.4  1.63  
 9 mean      group.1 time.1 -0.150 
10 mean      group.1 time.2  1.19  
# ℹ 46 more rows
> 
> 
> 
> cleanEx()
> nameEx("brm_marginal_draws")
> ### * brm_marginal_draws
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_marginal_draws
> ### Title: MCMC draws from the marginal posterior of an MMRM
> ### Aliases: brm_marginal_draws
> 
> ### ** Examples
> 
> if (identical(Sys.getenv("BRM_EXAMPLES", unset = ""), "true")) {
+ set.seed(0L)
+ data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
+ formula <- brm_formula(
+   data = data,
+   effect_base = FALSE,
+   interaction_base = FALSE
+ )
+ tmp <- utils::capture.output(
+   suppressMessages(
+     suppressWarnings(
+       model <- brm_model(
+         data = data,
+         formula = formula,
+         chains = 1,
+         iter = 100,
+         refresh = 0
+       )
+     )
+   )
+ )
+ brm_marginal_draws(
+   model = model,
+   data = data,
+   control = "group 1",
+   baseline = "time 1"
+ )
+ }
> 
> 
> 
> cleanEx()
> nameEx("brm_marginal_draws_average")
> ### * brm_marginal_draws_average
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_marginal_draws_average
> ### Title: Average marginal MCMC draws across time points.
> ### Aliases: brm_marginal_draws_average
> 
> ### ** Examples
> 
> if (identical(Sys.getenv("BRM_EXAMPLES", unset = ""), "true")) {
+ set.seed(0L)
+ data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
+ formula <- brm_formula(
+   data = data,
+   effect_base = FALSE,
+   interaction_base = FALSE
+ )
+ tmp <- utils::capture.output(
+   suppressMessages(
+     suppressWarnings(
+       model <- brm_model(
+         data = data,
+         formula = formula,
+         chains = 1,
+         iter = 100,
+         refresh = 0
+       )
+     )
+   )
+ )
+ draws <- brm_marginal_draws(
+   model = model,
+   data = data,
+   control = "group 1",
+   baseline = "time 1"
+ )
+ brm_marginal_draws_average(draws = draws, data = data)
+ brm_marginal_draws_average(
+   draws = draws,
+   data = data,
+   times = c("time 1", "time 2"),
+   label = "mean"
+ )
+ }
> 
> 
> 
> cleanEx()
> nameEx("brm_marginal_probabilities")
> ### * brm_marginal_probabilities
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_marginal_probabilities
> ### Title: Marginal probabilities on the treatment effect for an MMRM.
> ### Aliases: brm_marginal_probabilities
> 
> ### ** Examples
> 
> if (identical(Sys.getenv("BRM_EXAMPLES", unset = ""), "true")) {
+ set.seed(0L)
+ data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
+ formula <- brm_formula(
+   data = data,
+   effect_base = FALSE,
+   interaction_base = FALSE
+ )
+ tmp <- utils::capture.output(
+   suppressMessages(
+     suppressWarnings(
+       model <- brm_model(
+         data = data,
+         formula = formula,
+         chains = 1,
+         iter = 100,
+         refresh = 0
+       )
+     )
+   )
+ )
+ draws <- brm_marginal_draws(
+   model = model,
+   data = data,
+   control = "group 1",
+   baseline = "time 1"
+ )
+ brm_marginal_probabilities(draws, direction = "greater", threshold = 0)
+ }
> 
> 
> 
> cleanEx()
> nameEx("brm_marginal_summaries")
> ### * brm_marginal_summaries
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_marginal_summaries
> ### Title: Summary statistics of the marginal posterior of an MMRM.
> ### Aliases: brm_marginal_summaries
> 
> ### ** Examples
> 
> if (identical(Sys.getenv("BRM_EXAMPLES", unset = ""), "true")) {
+ set.seed(0L)
+ data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
+ formula <- brm_formula(
+   data = data,
+   effect_base = FALSE,
+   interaction_base = FALSE
+ )
+ tmp <- utils::capture.output(
+   suppressMessages(
+     suppressWarnings(
+       model <- brm_model(
+         data = data,
+         formula = formula,
+         chains = 1,
+         iter = 100,
+         refresh = 0
+       )
+     )
+   )
+ )
+ draws <- brm_marginal_draws(
+   model = model,
+   data = data,
+   control = "group 1",
+   baseline = "time 1"
+ )
+ suppressWarnings(brm_marginal_summaries(draws))
+ }
> 
> 
> 
> cleanEx()
> nameEx("brm_model")
> ### * brm_model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_model
> ### Title: Basic MMRM
> ### Aliases: brm_model
> 
> ### ** Examples
> 
> if (identical(Sys.getenv("BRM_EXAMPLES", unset = ""), "true")) {
+ set.seed(0L)
+ data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
+ formula <- brm_formula(
+   data = data,
+   effect_base = FALSE,
+   interaction_base = FALSE
+ )
+ tmp <- utils::capture.output(
+   suppressMessages(
+     suppressWarnings(
+       model <- brm_model(
+         data = data,
+         formula = formula,
+         chains = 1,
+         iter = 100,
+         refresh = 0
+       )
+     )
+   )
+ )
+ model
+ brms::prior_summary(model)
+ }
> 
> 
> 
> cleanEx()
> nameEx("brm_plot_compare")
> ### * brm_plot_compare
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_plot_compare
> ### Title: Visually compare the marginals of models and datasets.
> ### Aliases: brm_plot_compare
> 
> ### ** Examples
> 
> if (identical(Sys.getenv("BRM_EXAMPLES", unset = ""), "true")) {
+ set.seed(0L)
+ data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
+ formula <- brm_formula(
+   data = data,
+   effect_base = FALSE,
+   interaction_base = FALSE
+ )
+ tmp <- utils::capture.output(
+   suppressMessages(
+     suppressWarnings(
+       model <- brm_model(
+         data = data,
+         formula = formula,
+         chains = 1,
+         iter = 100,
+         refresh = 0
+       )
+     )
+   )
+ )
+ draws <- brm_marginal_draws(
+   model = model,
+   data = data,
+   control = "group 1",
+   baseline = "time 1"
+ )
+ suppressWarnings(summaries_draws <- brm_marginal_summaries(draws))
+ summaries_data <- brm_marginal_data(data)
+ brm_plot_compare(
+   model1 = summaries_draws,
+   model2 = summaries_draws,
+   data = summaries_data
+ )
+ brm_plot_compare(
+   model1 = summaries_draws,
+   model2 = summaries_draws,
+   marginal = "difference"
+ )
+ }
> 
> 
> 
> cleanEx()
> nameEx("brm_plot_draws")
> ### * brm_plot_draws
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_plot_draws
> ### Title: Visualize posterior draws of marginals.
> ### Aliases: brm_plot_draws
> 
> ### ** Examples
> 
> if (identical(Sys.getenv("BRM_EXAMPLES", unset = ""), "true")) {
+ set.seed(0L)
+ data <- brm_data(
+   data = brm_simulate()$data,
+   outcome = "response",
+   role = "response",
+   group = "group",
+   time = "time",
+   patient = "patient"
+ )
+ formula <- brm_formula(
+   data = data,
+   effect_base = FALSE,
+   interaction_base = FALSE
+ )
+ tmp <- utils::capture.output(
+   suppressMessages(
+     suppressWarnings(
+       model <- brm_model(
+         data = data,
+         formula = formula,
+         chains = 1,
+         iter = 100,
+         refresh = 0
+       )
+     )
+   )
+ )
+ draws <- brm_marginal_draws(
+   model = model,
+   data = data,
+   control = "group 1",
+   baseline = "time 1"
+ )
+ brm_plot_draws(draws = draws$change)
+ }
> 
> 
> 
> cleanEx()
> nameEx("brm_simulate")
> ### * brm_simulate
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brm_simulate
> ### Title: Simulate an MMRM.
> ### Aliases: brm_simulate
> 
> ### ** Examples
> 
> set.seed(0L)
> simulation <- brm_simulate()
> simulation$data
# A tibble: 800 × 4
   response group   patient   time  
      <dbl> <chr>   <chr>     <chr> 
 1     1.30 group 1 patient 1 time 1
 2     2.52 group 1 patient 1 time 2
 3     2.63 group 1 patient 1 time 3
 4     1.98 group 1 patient 1 time 4
 5     1.22 group 1 patient 2 time 1
 6     2.63 group 1 patient 2 time 2
 7     2.38 group 1 patient 2 time 3
 8     2.52 group 1 patient 2 time 4
 9     1.32 group 1 patient 3 time 1
10     2.63 group 1 patient 3 time 2
# ℹ 790 more rows
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  4.112 0.117 4.254 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
