
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "atRisk"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('atRisk')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("f_ES")
> ### * f_ES
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: f_ES
> ### Title: Expected Shortfall
> ### Aliases: f_ES
> 
> ### ** Examples
> 
> f_ES(0.95, "gaussian", params=c(0,1))
[1] -1.986962
> f_ES(0.95, "gaussian", params=c(0,1), accuracy=1e-05)
[1] -2.062412
> f_ES(0.9999, "gaussian", params=c(0,1), accuracy=1e-04)
[1] -3.719016
> 
> 
> 
> 
> cleanEx()
> nameEx("f_VaR")
> ### * f_VaR
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: f_VaR
> ### Title: Value-at-Risk
> ### Aliases: f_VaR
> 
> ### ** Examples
> 
> f_VaR(0.95, "gaussian", params=c(0,1))
[1] -1.644854
> 
> 
> 
> 
> cleanEx()
> nameEx("f_compile_quantile")
> ### * f_compile_quantile
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: f_compile_quantile
> ### Title: Estimation of quantiles
> ### Aliases: f_compile_quantile
> 
> ### ** Examples
> 
> # Import data
> data("data_euro")
> 
> # Data process
> PIB_euro_forward_4 = data_euro["GDP"][c(5:length(data_euro["GDP"][,1])),]
> FCI_euro_lag_4 = data_euro["FCI"][c(1:(length(data_euro["GDP"][,1]) - 4)),]
> CISS_euro_lag_4 = data_euro["CISS"][c(1:(length(data_euro["GDP"][,1]) - 4)),]
> 
> quantile_target <- as.vector(c(0.10,0.25,0.75,0.90))
> results_quantile_reg <- f_compile_quantile(qt_trgt=quantile_target,
+ v_dep=PIB_euro_forward_4,
+ v_expl=cbind(FCI_euro_lag_4, CISS_euro_lag_4),
+ t_trgt = 30)
> 
> 
> 
> 
> cleanEx()
> nameEx("f_distrib")
> ### * f_distrib
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: f_distrib
> ### Title: Distribution
> ### Aliases: f_distrib
> 
> ### ** Examples
> 
> # Import data
> data("data_euro")
> 
> # Data process
> PIB_euro_forward_4 = data_euro["GDP"][c(5:length(data_euro["GDP"][,1])),]
> FCI_euro_lag_4 = data_euro["FCI"][c(1:(length(data_euro["GDP"][,1]) - 4)),]
> CISS_euro_lag_4 = data_euro["CISS"][c(1:(length(data_euro["GDP"][,1]) - 4)),]
> 
> # for a gaussian
> quantile_target <- as.vector(c(0.25,0.75))
> results_quantile_reg <- f_compile_quantile(qt_trgt=quantile_target,
+ v_dep=PIB_euro_forward_4,
+ v_expl=cbind(FCI_euro_lag_4, CISS_euro_lag_4),
+ t_trgt = 30)
> 
> results_g <- f_distrib(type_function="gaussian",
+ compile_qt=results_quantile_reg,
+ starting_values=c(0, 1))
> 
> # for a skew-t
> quantile_target <- as.vector(c(0.10,0.25,0.75,0.90))
> results_quantile_reg <- f_compile_quantile(qt_trgt=quantile_target,
+ v_dep=PIB_euro_forward_4,
+ v_expl=cbind(FCI_euro_lag_4, CISS_euro_lag_4),
+ t_trgt = 30)
> 
> results_s <- f_distrib(type_function="skew-t",
+ compile_qt=results_quantile_reg,
+ starting_values=c(0, 1, -0.5, 1.3))
> 
> 
> 
> 
> cleanEx()
> nameEx("f_histo_RM")
> ### * f_histo_RM
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: f_histo_RM
> ### Title: Historical parameters and Risk Measures
> ### Aliases: f_histo_RM
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("f_param_histo")
> ### * f_param_histo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: f_param_histo
> ### Title: Historical parameters
> ### Aliases: f_param_histo
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("f_plot_distrib_2D")
> ### * f_plot_distrib_2D
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: f_plot_distrib_2D
> ### Title: Plot of historical distributions in 2D
> ### Aliases: f_plot_distrib_2D
> 
> ### ** Examples
> 
> # Import data
> data(data_US)
> 
> data(data_param_histo)
> 
> results_plot_2D <- f_plot_distrib_2D(m_param_histo=data_param_histo,
+ type_function="skew-t",
+ database=data_US,
+ x_lab="US GDP variation",
+ y_lab="Year")
> 
> 
> 
> 
> cleanEx()
> nameEx("f_plot_distrib_3D")
> ### * f_plot_distrib_3D
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: f_plot_distrib_3D
> ### Title: Plot of historical distributions in 3D
> ### Aliases: f_plot_distrib_3D
> 
> ### ** Examples
> 
> # Import data
> data(data_US)
> 
> data(data_param_histo)
> 
> results_plot_3D <- f_plot_distrib_3D(m_param_histo=data_param_histo,
+ type_function="skew-t",
+ database=data_US,
+ x_lab="US GDP variation",
+ y_lab="Year")
Warning in geom_density_ridges_gradient(scale = 20, size = 0.1, rel_min_height = 0.05) :
  Ignoring unknown parameters: `size`
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  4.693 0.583 5.396 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
